// <auto-generated />
using System;
using DevHotelAPI.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DevHotelAPI.Migrations
{
    [DbContext(typeof(HotelDevContext))]
    partial class HotelDevContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DevHotelAPI.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("IdentityUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222221"),
                            Address = "239 Lucy Burg",
                            Email = "Bernita_Konopelski43@gmail.com",
                            IdentityUserId = new Guid("99999999-9999-9999-9999-999999999991")
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Address = "0053 Adelle Spring",
                            Email = "Guillermo.Cummerata30@hotmail.com",
                            IdentityUserId = new Guid("99999999-9999-9999-9999-999999999992")
                        });
                });

            modelBuilder.Entity("DevHotelAPI.Entities.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("To")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            CustomerId = new Guid("22222222-2222-2222-2222-222222222221"),
                            From = new DateTime(2027, 1, 16, 15, 15, 0, 0, DateTimeKind.Unspecified),
                            RoomNumber = 100,
                            To = new DateTime(2027, 1, 18, 15, 15, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111112"),
                            CustomerId = new Guid("22222222-2222-2222-2222-222222222222"),
                            From = new DateTime(2027, 1, 16, 15, 15, 0, 0, DateTimeKind.Unspecified),
                            RoomNumber = 101,
                            To = new DateTime(2027, 1, 18, 15, 15, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111113"),
                            CustomerId = new Guid("22222222-2222-2222-2222-222222222221"),
                            From = new DateTime(2027, 1, 16, 15, 15, 0, 0, DateTimeKind.Unspecified),
                            RoomNumber = 102,
                            To = new DateTime(2027, 1, 18, 15, 15, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111114"),
                            CustomerId = new Guid("22222222-2222-2222-2222-222222222222"),
                            From = new DateTime(2027, 1, 16, 15, 15, 0, 0, DateTimeKind.Unspecified),
                            RoomNumber = 103,
                            To = new DateTime(2027, 1, 18, 15, 15, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111115"),
                            CustomerId = new Guid("22222222-2222-2222-2222-222222222221"),
                            From = new DateTime(2027, 1, 16, 15, 15, 0, 0, DateTimeKind.Unspecified),
                            RoomNumber = 104,
                            To = new DateTime(2027, 1, 18, 15, 15, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DevHotelAPI.Entities.Room", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Number"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("Number");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Number = 100,
                            RoomTypeId = 1
                        },
                        new
                        {
                            Number = 101,
                            RoomTypeId = 4
                        },
                        new
                        {
                            Number = 102,
                            RoomTypeId = 2
                        },
                        new
                        {
                            Number = 103,
                            RoomTypeId = 4
                        },
                        new
                        {
                            Number = 104,
                            RoomTypeId = 2
                        },
                        new
                        {
                            Number = 105,
                            RoomTypeId = 4
                        },
                        new
                        {
                            Number = 106,
                            RoomTypeId = 2
                        },
                        new
                        {
                            Number = 107,
                            RoomTypeId = 4
                        },
                        new
                        {
                            Number = 108,
                            RoomTypeId = 2
                        },
                        new
                        {
                            Number = 109,
                            RoomTypeId = 4
                        });
                });

            modelBuilder.Entity("DevHotelAPI.Entities.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TotalNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique();

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 1,
                            Description = "Room",
                            TotalNumber = 13
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 2,
                            Description = "TwinRoom",
                            TotalNumber = 39
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 3,
                            Description = "Triple",
                            TotalNumber = 15
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 4,
                            Description = "Suite",
                            TotalNumber = 41
                        });
                });

            modelBuilder.Entity("DevHotelAPI.Entities.Reservation", b =>
                {
                    b.HasOne("DevHotelAPI.Entities.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DevHotelAPI.Entities.Room", b =>
                {
                    b.HasOne("DevHotelAPI.Entities.RoomType", "Type")
                        .WithMany()
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("DevHotelAPI.Entities.Customer", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
